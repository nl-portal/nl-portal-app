services:

    localhost:
        container_name: localhost
        image: alpine:latest
        command: sleep infinity
        ports:
            - "8080:8080" # NL Portal Backend port
            - "8000:8000" # NL Portal Backend debug port
            - "3000:8081" # NL Portal Frontend port
            - "54321:5432" # NL Portal Database port
            - "8082:8082" # Keycloak port
            - "8001:8001" # OpenZaak
            - "8010:8010" # Objecten API
            - "8011:8011" # Objecttypen API
            - "8012:8012" # Open Notificaties
            - "8014:8014" # OpenKlant 2
            - "8015:8015" # OpenProduct
            - "5010:5010" # Haalcentraal BRP
            - "5011:5011" # Haalcentraal Bewoning

    nl-portal-app-backend-local:
        container_name: nl-portal-app-backend
        profiles:
            - local
        build: backend/
        network_mode: "service:localhost"
        env_file: imports/backend.env

    nl-portal-app-frontend-local:
        profiles:
            - local
        container_name: nl-portal-app-frontend
        build: frontend/
        network_mode: "service:localhost"
        env_file: imports/frontend.env

    nl-portal-app-database:
        container_name: nl-portal-app-database
        image: postgres:15
        network_mode: "service:localhost"
        profiles:
            - local
            - remote
        volumes:
            - nl-portal-app-database-data:/var/lib/postgres
        environment:
            POSTGRES_USER: nlportal
            POSTGRES_PASSWORD: password
            POSTGRES_DB: nl-portal

    nl-portal-app-backend-remote:
        image: ghcr.io/nl-portal/nl-portal-app-backend:latest
        profiles:
            - remote
        container_name: nl-portal-app-backend
        network_mode: "service:localhost"
        env_file: imports/backend.env

    nl-portal-app-frontend-remote:
        image: ghcr.io/nl-portal/nl-portal-app-frontend:latest
        profiles:
            - remote
        container_name: nl-portal-app-frontend
        network_mode: "service:localhost"
        env_file: imports/frontend.env

    nl-portal-app-keycloak:
        container_name: nl-portal-app-keycloak
        depends_on:
            - nl-portal-app-keycloak-database
        image: quay.io/keycloak/keycloak:26.3
        network_mode: "service:localhost"
        environment:
            KC_DB: postgres
            KC_DB_URL: jdbc:postgresql://nl-portal-app-keycloak-database/keycloak
            KC_DB_USERNAME: keycloak
            KC_DB_PASSWORD: keycloak
            KC_FEATURES: token-exchange:v1,admin-fine-grained-authz:v1
            KC_HTTP_RELATIVE_PATH: /auth
        volumes:
            - ./imports/keycloak:/opt/keycloak/data/import
        command: "start-dev --import-realm --http-port=8082"

    nl-portal-app-keycloak-database:
        container_name: nl-portal-app-keycloak-database
        image: postgres:15
        environment:
            POSTGRES_USER: keycloak
            POSTGRES_PASSWORD: keycloak

    nl-portal-app-openzaak:
        image: openzaak/open-zaak:1.22.0
        container_name: nl-portal-app-openzaak
        platform: linux/amd64
        profiles:
            - zgw
            - openzaak
        network_mode: "service:localhost"
        environment: &openzaak-env
            - UWSGI_PORT=8001
            - DB_HOST=nl-portal-app-openzaak-database
            - DB_PORT=5432
            - SECRET_KEY=veryRestrictedSecretKey
            - DB_USER=openzaak
            - DB_PASSWORD=openzaak
            - DB_NAME=openzaak
            - CACHE_DEFAULT=nl-portal-app-redis:6379/0
            - CACHE_AXES=nl-portal-app-redis:6379/0
            - DEBUG=true
            - ALLOWED_HOSTS=localhost,host.docker.internal,172.17.0.1,openzaak,example.com
            - OPENZAAK_SUPERUSER_USERNAME=admin
            - OPENZAAK_SUPERUSER_EMAIL=admin@example.org
            - CELERY_BROKER_URL=redis://nl-portal-app-redis:6379/0
            - CELERY_RESULT_BACKEND=redis://nl-portal-app-redis:6379/0
            - DJANGO_SUPERUSER_PASSWORD=admin
            - SENDFILE_BACKEND=django_sendfile.backends.simple
            - DISABLE_2FA=true
        depends_on:
            - nl-portal-app-openzaak-database
            - nl-portal-app-redis
        volumes:
            - ./imports/openzaak/private-media:/app/private-media

    nl-portal-app-openzaak-import:
        image: openzaak/open-zaak:1.22.0
        container_name: nl-portal-app-openzaak-import
        platform: linux/amd64
        profiles:
            - zgw
            - openzaak
        environment: *openzaak-env
        network_mode: "service:localhost"
        command: sh init/init.sh
        volumes:
            - ./imports/openzaak/fixtures:/app/src/openzaak/fixtures
            - ./imports/openzaak/private-media:/app/private-media
            - ./imports/openzaak/init:/app/init
        depends_on:
            - nl-portal-app-openzaak
            - nl-portal-app-openzaak-database
            - nl-portal-app-redis

    nl-portal-app-openzaak-database:
        image: postgis/postgis:15-3.5
        container_name: nl-portal-app-openzaak-database
        platform: linux/amd64
        profiles:
            - zgw
            - openzaak
        environment:
            - POSTGRES_USER=openzaak
            - POSTGRES_PASSWORD=openzaak
            - POSTGRES_DB=openzaak

    nl-portal-app-openklant-2:
        image: maykinmedia/open-klant:2.12.1
        container_name: nl-portal-app-openklant-2
        profiles:
            - zgw
            - openklant
        depends_on:
            - nl-portal-app-openklant-2-db
            - nl-portal-app-redis
        network_mode: "service:localhost"
        environment:
            - UWSGI_PORT=8014
            - DJANGO_SETTINGS_MODULE=openklant.conf.docker
            - IS_HTTPS=no
            - DB_NAME=openklant
            - DB_USER=openklant
            - DB_PASSWORD=openklant
            - DB_HOST=nl-portal-app-openklant-2-db
            - ALLOWED_HOSTS=*
            - CACHE_DEFAULT=nl-portal-app-redis:6379/0
            - CACHE_AXES=nl-portal-app-redis:6379/0
            - SUBPATH=${SUBPATH:-/}
            - SECRET_KEY=${SECRET_KEY:-django-insecure-f8s@b*ds4t84-q_2#c0j0506@!l2q6r5_pq5e!vm^_9c*#^66b}
            - CELERY_BROKER_URL=redis://nl-portal-app-redis:6379/0
            - CELERY_RESULT_BACKEND=redis://nl-portal-app-redis:6379/0
            - DISABLE_2FA=true
            - RUN_SETUP_CONFIG=true
        volumes:
            - ./imports/openklant-2/init/data.yaml:/app/data.yaml
            - ./imports/openklant-2/init:/app/init
        command: sh /app/init/init.sh

    nl-portal-app-openklant-2-db:
        image: postgres:15
        container_name: nl-portal-app-openklant-2-db
        profiles:
            - zgw
            - openklant
        environment:
            - POSTGRES_USER=openklant
            - POSTGRES_PASSWORD=openklant
            - POSTGRES_DB=openklant
        volumes:
            - ./imports/openklant-2/database:/docker-entrypoint-initdb.d/

    nl-portal-app-objecten-api:
        image: maykinmedia/objects-api:3.2.0
        container_name: nl-portal-app-objecten-api
        platform: linux/amd64
        network_mode: "service:localhost"
        profiles:
            - zgw
            - objecten
        environment: &objects-env
            - UWSGI_PORT=8010
            - CORS_ALLOW_ALL_ORIGINS=true
            - SECRET_KEY=${SECRET_KEY:-1(@f(-6s_u(5fd&1sg^uvu2s(c-9sapw)1era8q&)g)h@cwxxg}
            - DJANGO_SETTINGS_MODULE=objects.conf.docker
            - DB_HOST=nl-portal-app-objecten-api-database
            - DEBUG=true
            - TWO_FACTOR_FORCE_OTP_ADMIN=False
            - TWO_FACTOR_PATCH_ADMIN=False
            - DISABLE_2FA=true
            - CACHE_AXES=nl-portal-app-redis:6379/0
            - CACHE_DEFAULT=nl-portal-app-redis:6379/0
            - ALLOWED_HOSTS=localhost,host.docker.internal,172.17.0.1
            - CELERY_BROKER_URL=redis://nl-portal-app-redis:6379/1
            - CELERY_RESULT_EXPIRES=3600
            - CELERY_RESULT_BACKEND=redis://nl-portal-app-redis:6379/1
            - CELERY_LOGLEVEL=DEBUG
        depends_on:
            - nl-portal-app-objecten-api-database
            - nl-portal-app-redis

    nl-portal-app-objecten-api-celery:
        image: maykinmedia/objects-api:3.2.0
        container_name: nl-portal-app-objecten-api-celery
        platform: linux/amd64
        network_mode: "service:localhost"
        profiles:
            - zgw
            - objecten
        depends_on:
            - nl-portal-app-objecten-api
            - nl-portal-app-objecten-api-database
            - nl-portal-app-redis
        command: /celery_worker.sh
        environment: *objects-env

    nl-portal-app-objecten-api-database:
        image: postgis/postgis:15-3.5
        container_name: nl-portal-app-objecten-api-database
        platform: linux/amd64
        profiles:
            - zgw
            - objecten
        environment:
            - POSTGRES_USER=objects
            - POSTGRES_PASSWORD=objects
            - POSTGRES_DB=objects

    nl-portal-app-objecten-api-import:
        image: maykinmedia/objects-api:3.2.0
        container_name: nl-portal-app-objects-api-import
        platform: linux/amd64
        profiles:
            - zgw
            - objecten
        environment: *objects-env
        network_mode: "service:localhost"
        command: sh init/init.sh
        volumes:
            - ./imports/objects-api/fixtures:/app/src/objects/fixtures
            - ./imports/objects-api/init:/app/init
        depends_on:
            - nl-portal-app-objecten-api
            - nl-portal-app-objecten-api-database

    nl-portal-app-objecttypen-api:
        image: maykinmedia/objecttypes-api:2.3.0
        container_name: nl-portal-app-objecttypen-api
        platform: linux/amd64
        profiles:
            - zgw
            - objecten
        network_mode: "service:localhost"
        environment: &objecttypes-env
            - UWSGI_PORT=8011
            - CORS_ALLOW_ALL_ORIGINS=true
            - SECRET_KEY=${SECRET_KEY:-fgv=c0hz&tl*8*3m3893@m+1pstrvidc9e^5@fpspmg%cy$$15d}
            - DJANGO_SETTINGS_MODULE=objecttypes.conf.docker
            - DB_HOST=nl-portal-app-objecttypen-api-database
            - DB_USER=objecttypes
            - DB_PASSWORD=objecttypes
            - CACHE_AXES=nl-portal-app-redis:6379/0
            - CACHE_DEFAULT=nl-portal-app-redis:6379/0
            - ALLOWED_HOSTS=localhost,host.docker.internal,172.17.0.1
            - TWO_FACTOR_FORCE_OTP_ADMIN=False
            - TWO_FACTOR_PATCH_ADMIN=False
            - DISABLE_2FA=true
            - DEBUG=true
        depends_on:
            - nl-portal-app-objecttypen-api-database
            - nl-portal-app-redis

    nl-portal-app-objecttypen-api-database:
        image: postgres:15
        container_name: nl-portal-app-objecttypen-api-database
        profiles:
            - zgw
            - objecten
        environment:
            - POSTGRES_USER=objecttypes
            - POSTGRES_PASSWORD=objecttypes
            - POSTGRES_DB=objecttypes

    nl-portal-app-objecttypen-api-import:
        image: maykinmedia/objecttypes-api:2.3.0
        container_name: nl-portal-app-objecttypen-api-import
        platform: linux/amd64
        profiles:
            - zgw
            - objecten
        environment: *objecttypes-env
        network_mode: "service:localhost"
        command: sh init/init.sh
        volumes:
            - ./imports/objecttypes-api/fixtures:/app/src/objecttypes/fixtures
            - ./imports/objecttypes-api/init:/app/init
        depends_on:
            - nl-portal-app-objecttypen-api
            - nl-portal-app-objecttypen-api-database

    nl-portal-app-open-notificaties:
        image: openzaak/open-notificaties:1.13.0
        container_name: nl-portal-app-open-notificaties
        platform: linux/amd64
        network_mode: "service:localhost"
        profiles:
            - zgw
            - objecten
        environment: &notificaties-env
            - UWSGI_PORT=8012
            - DJANGO_SETTINGS_MODULE=nrc.conf.docker
            - SECRET_KEY=${SECRET_KEY:-4wHY2Cp5`4(q%)]cuWxPQJRp5kN?g+`.Xah>%6Fsq6+)R>p_}
            - ALLOWED_HOSTS=*
            - CACHE_DEFAULT=nl-portal-app-redis:6379/0
            - CACHE_AXES=nl-portal-app-redis:6379/0
            - DB_PORT=5432
            - DB_HOST=nl-portal-app-open-notificaties-database
            - DB_NAME=notifications
            - DB_USER=notifications
            - DB_PASSWORD=notifications
            - RABBITMQ_HOST=open-notificaties-rabbitmq
            - PUBLISH_BROKER_URL=amqp://guest:guest@nl-portal-app-open-notificaties-rabbitmq:5672//
            - CELERY_BROKER_URL=amqp://guest:guest@nl-portal-app-open-notificaties-rabbitmq:5672//
            - CELERY_RESULT_BACKEND=redis://nl-portal-app-redis:6379/1
            - CELERY_LOGLEVEL=DEBUG
            - CELERY_WORKER_CONCURRENCY=${CELERY_WORKER_CONCURRENCY:-4}
            - OPENNOTIFICATIES_SUPERUSER_USERNAME=admin
            - OPENNOTIFICATIES_SUPERUSER_EMAIL=admin@localhost
            - DJANGO_SUPERUSER_PASSWORD=admin
            - LOG_NOTIFICATIONS_IN_DB=yes
            - DISABLE_2FA=true

    nl-portal-app-open-notificaties-import:
        image: openzaak/open-notificaties:1.13.0
        container_name: nl-portal-app-open-notificaties-import
        platform: linux/amd64
        network_mode: "service:localhost"
        profiles:
            - zgw
            - objecten
        command: sh init/init.sh
        volumes:
            - ./imports/open-notificaties/fixtures:/app/src/nrc/fixtures
            - ./imports/open-notificaties/init:/app/init
        depends_on:
            - nl-portal-app-open-notificaties
            - nl-portal-app-open-notificaties-database
        environment: *notificaties-env

    nl-portal-app-open-notificaties-celery:
        image: openzaak/open-notificaties:1.13.0
        container_name: nl-portal-app-open-notificaties-celery
        platform: linux/amd64
        network_mode: "service:localhost"
        profiles:
            - zgw
            - objecten
        command: /celery_worker.sh
        healthcheck:
            test: [ "CMD", "python", "/app/bin/check_celery_worker_liveness.py" ]
            interval: 30s
            timeout: 5s
            retries: 3
            start_period: 10s
        environment: *notificaties-env

    nl-portal-app-open-notificaties-database:
        image: postgis/postgis:15-3.5
        container_name: nl-portal-app-open-notificaties-database
        profiles:
            - zgw
            - objecten
        environment:
            - POSTGRES_USER=notifications
            - POSTGRES_PASSWORD=notifications
            - POSTGRES_DB=notifications
            - POSTGRES_HOST_AUTH_METHOD=trust

    nl-portal-app-open-notificaties-rabbitmq:
        image: rabbitmq:3.9-management
        container_name: nl-portal-app-open-notificaties-rabbitmq
        profiles:
            -   objecten

    nl-portal-app-openproduct:
        image: maykinmedia/open-product:1.3.0
        container_name: nl-portal-app-openproduct
        profiles:
            - zgw
            - openproduct
        platform: linux/amd64
        depends_on:
            - nl-portal-app-openproduct-database
            - nl-portal-app-redis
        volumes:
            - ./imports/openproduct/init:/app/init
        command: sh /app/init/init.sh
        environment: &open-product-env
            - DJANGO_SETTINGS_MODULE=openproduct.conf.docker
            - SECRET_KEY=${SECRET_KEY:-django-insecure-@4wj9(+*bu7*v&%on7+e_8!d1ckl%r=6+sz#d2!pw^@lb0+=}
            - DB_NAME=openproduct
            - DB_USER=openproduct
            - DB_PASSWORD=openproduct
            - DB_HOST=nl-portal-app-openproduct-database
            - DB_PORT=5432
            - CACHE_DEFAULT=redis://nl-portal-app-redis:6379/0
            - CELERY_BROKER_URL=redis://nl-portal-app-redis:6379/1
            - CELERY_RESULT_BACKEND=redis://nl-portal-app-redis:6379/1
            - ALLOWED_HOSTS=*
            - DISABLE_2FA=true

    nl-portal-app-openproduct-celery:
        image: maykinmedia/open-product:1.3.0
        container_name: nl-portal-app-openproduct-celery
        platform: linux/amd64
        network_mode: "service:localhost"
        profiles:
            - zgw
            - openproduct
        command: /celery_worker.sh
        environment: *open-product-env

    nl-portal-app-openproduct-database:
        image: postgres:17
        container_name: nl-portal-app-openproduct-database
        profiles:
            - zgw
            - openproduct
        environment:
            - POSTGRES_USER=${DB_USER:-openproduct}
            - POSTGRES_PASSWORD=${DB_PASSWORD:-openproduct}
            - POSTGRES_DB=openproduct
        volumes:
            - ./imports/openproduct/database:/docker-entrypoint-initdb.d/

    nl-portal-app-redis:
        image: redis:6.2.6
        container_name: nl-portal-app-redis
        profiles:
            - zgw
            - openzaak
            - objecten
            - openproduct
            - openklant

    nl-portal-app-haalcentraal-personen:
        container_name: nl-portal-app-haalcentraal-personen
        profiles:
            - haalcentraal
        image: ghcr.io/brp-api/personen-mock:2.2.1
        network_mode: "service:localhost"
        environment:
            - ASPNETCORE_ENVIRONMENT=Release
            - ASPNETCORE_URLS=http://+:5010

    nl-portal-app-haalcentraal-bewoningen:
        container_name: nl-portal-app-haalcentraal-bewoningen
        profiles:
            - haalcentraal
        image: ghcr.io/brp-api/haal-centraal-bewoning-bevragen-mock:2.0.1
        network_mode: "service:localhost"
        environment:
            - ASPNETCORE_ENVIRONMENT=Release
            - ASPNETCORE_URLS=http://+:5011

    nl-portal-app-configuration-panel-router:
        container_name: nl-portal-app-configuration-panel-router
        image: nginx:stable-alpine-slim
        profiles:
            - config
        ports:
            - "3001:8080"
        volumes:
            - "./imports/configuration-panel/router/conf.d/:/etc/nginx/conf.d/"
            - "./imports/configuration-panel/router/templates/:/etc/nginx/templates/"
        environment:
            CONFIG_PANEL_BACKEND_HOST: http://host.docker.internal:8090
            CONFIG_PANEL_FRONTEND_HOST: http://host.docker.internal:8091

    nl-portal-app-configuration-panel-backend:
        container_name: nl-portal-app-configuration-panel-backend
        image: ghcr.io/nl-portal/configuration-panel-backend
        profiles:
            - config
        depends_on:
            - nl-portal-app-configuration-panel-database
            - nl-portal-app-keycloak
        ports:
            - "8090:8080"
        env_file: imports/configuration-panel/env/backend.env

    nl-portal-app-configuration-panel-frontend:
        container_name: nl-portal-app-configuration-panel-frontend
        profiles:
            - config
        image: ghcr.io/nl-portal/configuration-panel-frontend
        depends_on:
            - nl-portal-app-configuration-panel-backend
            - nl-portal-app-keycloak
        ports:
            - "8091:8080"
        env_file: imports/configuration-panel/env/frontend.env

    nl-portal-app-configuration-panel-database:
        container_name: nl-portal-app-configuration-panel-database
        image: postgres:15
        profiles:
            - config
        environment:
            POSTGRES_USER: config
            POSTGRES_PASSWORD: password
            POSTGRES_DB: nl-portal-config
        volumes:
            - nl-portal-app-configuration-panel-database-data:/var/lib/postgres # persist data even if container shuts down

volumes:
    nl-portal-app-database-data:
    nl-portal-app-configuration-panel-database-data:
    nl-portal-app-openzaak-private-media:
